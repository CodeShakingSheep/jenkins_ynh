#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers
# Load common variables for all scripts.
source _variables

#=================================================
# MANAGE FAILURE OF THE SCRIPT
#=================================================

ynh_clean_setup () {
# Nettoyage des résidus d'installation non pris en charge par le script remove.
	ynh_clean_check_starting
	ynh_exec_warn_less kill -s 15 $pid_change_port	# Arrête l'exécution de change_port

	# Clean hosts
	sed -i '/#jenkins/d' /etc/hosts
}
ynh_abort_if_errors	# Active trap pour arrêter le script si une erreur est détectée.

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THIS ARGS
#=================================================

final_path=/var/lib/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app final_path $final_path
ynh_app_setting_set $app overwrite_nginx "1"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================

port=$(ynh_find_port 8080)	# Cherche un port libre.
ynh_app_setting_set $app port $port

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies $app_depencencies

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# FIX THE PORT TO USE
#=================================================

change_port() {
	# Wait for the creation of the jenkins service file
	while [ ! -e /etc/default/jenkins ]
	do
		sleep 0.5
	done
	# And modify the port as soon as possible, to prevent a crach of jenkins if the default port is already used.
	ynh_replace_string "^HTTP_PORT=.*" "HTTP_PORT=$port" /etc/default/jenkins
}
change_port &
pid_change_port=$!

#=================================================
# INSTALL JENKINS
#=================================================

ynh_download_file --dest_dir="../conf"
dpkg --install ../conf/jenkins.deb

#=================================================
# SETUP JENKINS
#=================================================

# Ignore le Setup Wizard
ynh_replace_string "-Djava.awt.headless=true" "& -Djenkins.install.runSetupWizard=false" /etc/default/jenkins

if [ "$path_url" != "/" ];
then	# Ajoute le path en cas d'installation en sous-dossier dans les options de démarrage de Jenkins
	sed -i "$ s@--httpPort=\$HTTP_PORT@& --prefix=$path_url@g" /etc/default/jenkins
fi

#=================================================
# FORCE PUBLIC ACCESS
#=================================================

# Jenkins est public par défaut, au moins pour le téléchargement de jenkins-cli.jar
ynh_app_setting_set $app unprotected_uris "/"

ynh_systemd_action --action=reload --service_name=nginx
yunohost app ssowatconf

#=================================================
# ENABLE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --log /var/log/$app/$app.log

#=================================================
# CHECK JENKINS STARTING
#=================================================

config_OK=0
timeout=3600
echo "127.0.0.1 $domain #jenkins" | tee -a /etc/hosts	# Renseigne le domain dans le host, pour prévenir d'un dns pas encore propagé.

jenkins_cli="java -jar /var/lib/jenkins/jenkins-cli.jar -remoting -s http://$domain$path_url"

# Wait for Jenkins fully started
ynh_systemd_action --action=restart --line_match="Jenkins is fully up and running" --log_path="/var/log/$app/$app.log" --timeout="$timeout"


# Si le log annonce une première fois le démarrage de jenkins. Installe les plugins
wget -nv --no-check-certificate https://$domain$path_url/jnlpJars/jenkins-cli.jar -O /var/lib/jenkins/jenkins-cli.jar
for i in `seq 1 $timeout`
do	# La boucle attend la mise à jour des dépôts de plugins.
	if test -e /var/lib/jenkins/updates/default.json; then
		break;
	else
		echo -n "."
		sleep 1
	fi
done

# Installation du plugin pour l'authentification ldap et http auth
$jenkins_cli install-plugin reverse-proxy-auth-plugin

# Installation des plugins recommandés (Lors de l'install avec le Setup Wizard)
$jenkins_cli install-plugin cloudbees-folder	# Folders Plugin
$jenkins_cli install-plugin antisamy-markup-formatter	# OWASP Markup Formatter Plugin
$jenkins_cli install-plugin pam-auth	# PAM Authentication plugin
$jenkins_cli install-plugin mailer	# Mailer Plugin
$jenkins_cli install-plugin ldap	# LDAP Plugin
$jenkins_cli install-plugin matrix-auth	# Matrix Authorization Strategy Plugin
$jenkins_cli install-plugin build-timeout	# Build timeout plugin
$jenkins_cli install-plugin credentials-binding	# Credentials Binding Plugin
$jenkins_cli install-plugin timestamper	# Timestamper
$jenkins_cli install-plugin ws-cleanup	# Workspace Cleanup Plugin
$jenkins_cli install-plugin ant	# Ant Plugin
$jenkins_cli install-plugin gradle	# Gradle Plugin
$jenkins_cli install-plugin workflow-aggregator	# Pipeline
$jenkins_cli install-plugin pipeline-stage-view	# Pipeline: Stage View Plugin
$jenkins_cli install-plugin git	# Git plugin
$jenkins_cli install-plugin github-organization-folder	# GitHub Organization Folder Plugin
$jenkins_cli install-plugin subversion	# Subversion Plug-in
$jenkins_cli install-plugin email-ext	# Email Extension Plugin
$jenkins_cli install-plugin ssh-slaves	# SSH Slaves plugin

# Installation de plugins supplémentaires pour le confort
$jenkins_cli install-plugin ansicolor	# Prise en charge des couleurs pour la sortie console. Améliore la lisibilité de la console (par contre les couleurs ne passent pas...)
$jenkins_cli install-plugin fstrigger # Monitoring sur le système de fichier local. Pour surveiller des dossiers de code et builder sur les changements.

# Configure la sécurité globale avec ldap par défaut.
cp ../conf/config.xml /var/lib/jenkins/
chown jenkins: /var/lib/jenkins/config.xml

# Wait for Jenkins fully started
ynh_systemd_action --action=restart --line_match="Jenkins is fully up and running" --log_path="/var/log/$app/$app.log" --timeout="$timeout"

#=================================================
# SETUP SSOWAT
#=================================================

# Si Jenkins est privé, retire l'autorisation publique.
if [ $is_public -eq 0 ]
then	# Retire l'accès public
	ynh_app_setting_delete $app unprotected_uris
	ynh_app_setting_set $app skipped_uris "/github-webhook"	# /path/github-webhook doit rester accessible pour les webhooks de github.
fi

#=================================================
# CLEAN HOSTS FILE
#=================================================

sed -i '/#jenkins/d' /etc/hosts

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

message="If you facing an issue or want to improve this app, please open a new issue in this project: https://github.com/YunoHost-Apps/jenkins_ynh"

ynh_send_readme_to_admin --app_message="$message" --recipients="root"
