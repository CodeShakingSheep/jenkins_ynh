#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK THE SYNTAX OF THE PATHS
#=================================================

test -n "$old_path" || old_path="/"
test -n "$new_path" || new_path="/"
new_path=$(ynh_normalize_url_path $new_path)
old_path=$(ynh_normalize_url_path $old_path)

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	change_path=1
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# MODIFY URL IN NGINX CONF
#=================================================

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
	# Make a backup of the original nginx config file if modified
	ynh_backup_if_checksum_is_different "$nginx_conf_path"

	ynh_replace_string "location $old_path" "location $new_path" "$nginx_conf_path"
	ynh_replace_string "\(proxy_redirect.*\)$old_domain$old_path" "\1$old_domain$new_path" "$nginx_conf_path"

	# Calculate and store the nginx config file checksum
	ynh_store_file_checksum "$nginx_conf_path"
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
	# Delete file checksum for the old conf file location
	ynh_delete_file_checksum "$nginx_conf_path"

	ynh_replace_string "\(proxy_redirect.*\)$old_domain" "\1$new_domain" "$nginx_conf_path"

	mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf

	nginx_conf_path=/etc/nginx/conf.d/$new_domain.d/$app.conf
	# Calculate and store the nginx config file checksum
	ynh_store_file_checksum "$nginx_conf_path"
fi

#=================================================
# SPECIFIC MODIFICATIONS
#=================================================
# FIX JENKINS SETUP
#=================================================

if [ $change_path -eq 1 ]
then
	# Ajoute le path en cas d'installation en sous-dossier dans les options de d√©marrage de Jenkins

	# Change to root
	if [ "$new_path" == "/" ]
	then
		sed -i "s@--prefix=$old_path@@g" /etc/default/jenkins
	# Change to a sub path
	else
		if ! grep --quiet "prefix=$old_path" /etc/default/jenkins
		then
			sed -i "$ s@--httpPort=\$HTTP_PORT@& --prefix=$new_path@g" /etc/default/jenkins
		else
			sed -i "s@--prefix=$old_path@--prefix=$new_path@g" /etc/default/jenkins
		fi
	fi
fi

#=================================================
# RESTART JENKINS IN BACKGROUND
#=================================================

# Wait for Jenkins fully started
ynh_check_starting "Jenkins is fully up and running" "/var/log/$app/$app.log" "300"

#=================================================
# RELOAD NGINX
#=================================================

systemctl reload nginx
